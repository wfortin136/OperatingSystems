squish-pty bochs-pintos -q
PiLo hda4
Loading.............
Kernel command line: -q run priority-donate-chain
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
Initializing EHCI
Initializing UHCI
Boot complete.
Executing 'priority-donate-chain':
(priority-donate-chain) begin
(priority-donate-chain) main got lock.
(priority-donate-chain) main should have priority 3.  Actual priority: 3.
(priority-donate-chain) main should have priority 6.  Actual priority: 3.
(priority-donate-chain) main should have priority 9.  Actual priority: 6.
(priority-donate-chain) main should have priority 12.  Actual priority: 9.
(priority-donate-chain) main should have priority 15.  Actual priority: 12.
(priority-donate-chain) main should have priority 18.  Actual priority: 15.
(priority-donate-chain) main should have priority 21.  Actual priority: 21.
(priority-donate-chain) main finishing with priority 21.
(priority-donate-chain) end(priority-donate-chain) thread 1 got lock
Kernel PANIC at ../../threads/synch.c:280 in lock_release(): assertion `lock_held_by_current_thread (lock)' failed.
Call stack: 0xc002cf41 0xc010703c 0xc010703c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 117 ticks
Thread: 0 idle ticks, 117 kernel ticks, 0 user ticks
Console: 1387 characters output
Keyboard: 0 keys pressed
Powering off..